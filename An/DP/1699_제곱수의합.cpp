// 풀이봄
#include <stdio.h>
#include <math.h>
#include <limits.h>
#include <algorithm>

using namespace std;


int main()
{
	int n, d[100001] = { 0, };
	scanf("%d", &n);
	d[1] = 1;
	for (int i = 2; i <= n; i++)
	{
		int temp = INT_MAX;
		for (int j = 1; (int)pow(j, 2) <= i; j++)
		{
			temp = min(temp, d[i - (int)pow(j, 2)] + 1);
		}
		d[i] = temp;
	}
	printf("%d", d[n]);
}

/*
제곱수의 합 O(n) 문제
자연수N이 주어질때 제곱수 합 항의 개수 최소
1 -> 1(1)

2 -> 2 (1+1)
3 -> 3 (1+1+1)
4 -> 1 (2)

5 -> 2 (2 + 1)
6 -> 3 (2 + 1 + 1)
7 -> 4 (2+ 1+1+1)
8 -> 1 (2^3)

9 -> 1 (3^2) 
10 -> 
11
12

16

특징 
2^2 나오기 전까지는  1^2에서 +1씩
3^2 나오면 얘가 이김

1~3 : 1++ 
2^2 ~2^3 : 1++ (pow)
3^2 ~ : 1++
3^2 + 2^2 : 2 ++
4^2 ~ (16): 1++ 
4^2 + 2^2 ~(20) : 2++
4^2 + 3^2~ (25) : 2++
4^2 + 3^2 + 2^2 ~(29) : 3++

단순하게 범위로 나눠서 하면 dp가 아니지
범위를 d로 표현 못할까

강의 
왜 범위에 집중 했을까
N = 0^2 + 0^2 + ... + 0^2 인데
마지막자리에 i가 온다면
d[n] = d[n-(i^2)] + 1 (i^2 <= n)
시간복잡도 N * sqrt(n)
*/
